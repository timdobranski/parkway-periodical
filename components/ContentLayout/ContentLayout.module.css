.layoutWrapper {
  /* border: solid red 2px; */
  width: 100%;
  padding-bottom: 0;
}
/* grid child classes:
  gridItem, mainContent, mainContent{index},
  gridItem, captionContent, captionContent{index}
 */

.layoutGrid  {
  display: grid;
  /* min-height: 0; */
  width: 100%;
  /* border: solid red 2px; */
}

/* define names for grid areas */
.twoColumnGrid {
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(auto-fill, minmax(100px, auto));
  grid-template-areas:
    "mainContent0 mainContent1"
    "captionContent0 captionContent1";
}
.threeColumnGrid {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(auto-fill, minmax(100px, auto));
  grid-template-areas:
    "mainContent0 mainContent1 mainContent2"
    "captionContent0 captionContent1 captionContent2";
}
.fourColumnGrid {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(auto-fill, minmax(100px, auto));
  grid-template-areas:
    "mainContent0 mainContent1 mainContent2 mainContent3"
    "captionContent0 captionContent1 captionContent2 captionContent3";
}
/* assign content to named grid areas */
.mainContent0 { grid-area: mainContent0; }
.captionContent0 { grid-area: captionContent0; }
.mainContent1 { grid-area: mainContent1; }
.captionContent1 { grid-area: captionContent1; }
.mainContent2 { grid-area: mainContent2; }
.captionContent2 { grid-area: captionContent2; }
.mainContent3 { grid-area: mainContent3; }
.captionContent3 { grid-area: captionContent3; }

/* styling for all grid items */
.gridItem {
  position: relative;
  display: flex;
  flex-direction: column;
  margin: 5px;
  flex: 1;
  align-items: center;
  justify-content: center;
  height: 100%;
  /* border: solid rgb(0, 255, 8) 2px; */
}
.mainContent {

}
.captionContent {
    justify-content: flex-start;
}
.mainContent0 {

}
.captionContent0 {

}
.mainContent1 {

}
.captionContent1 {

}



.layoutColumnEditMenu {
  position: absolute;
  bottom: -60px;
  height: 50px;
  left: 0;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background: rgba(255, 255, 255);
  border: solid 1px rgb(179, 179, 179);
  border-radius: 2px;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, .3);
}

.selectHandle {
  width: 40px;
  height: 40px;
  border: solid black 2px;
}
.addContentIcon {
 width: 100%;
 height: 100%;
}
.selectChoicesWrapper {
  display: flex;
  flex-direction: row;
}
.layoutColumn :global(.p-editor-toolbar) {

  left: -50%;
  width: 550px;
  z-index: 100;
  border-radius: 2px !important;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, .3);
  /* position: absolute !important; */
  transform: scale(1.2)
}
.resetColumnWrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  margin: .25rem;
  padding: .25rem .5rem;
  border-radius: 4px;
}
.resetColumnWrapper p {
  margin: 0;
}
.resetColumnWrapper:hover {
  cursor: pointer;
  background-color: rgb(243, 243, 243);
}
.resetBlockIcon {
  padding: 3px;
  margin: 2px;
  /* background: rgba(0, 0, 0, .3); */
  color: rgb(255, 56, 56);
  width: 20px;
  height: 20px;
  z-index: 100;
}
.resetBlockIcon:hover {
  cursor: pointer;
}

@media (max-width: 768px) {
  .layoutGrid {
    grid-template-columns: 1fr;
    grid-template-areas:
      "mainContent0"
      "captionContent0"
      "mainContent1"
      "captionContent1"
      "mainContent2"
      "captionContent2"
      "mainContent3"
      "captionContent3";
  }
  .twoColumnGrid, .threeColumnGrid, .fourColumnGrid {
    grid-template-columns: 1fr;
  }

}